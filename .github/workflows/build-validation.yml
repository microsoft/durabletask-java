# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Build Validation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'microsoft'
    - name: set JDK_11 environment variable test compiling and running
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      run: echo ::set-env name=JDK_11::$(echo $JAVA_HOME)
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'temurin'
    - name: Build with Gradle
      uses: gradle/gradle-build-action@bc3340afc5e3cc44f2321809ac090d731c13c514
      with:
        arguments: build
      # TODO: Move the sidecar into a central image repository
    - name: Initialize Durable Task Sidecar
      run: docker run --name durabletask-sidecar -p 4001:4001 --env 'DURABLETASK_SIDECAR_LOGLEVEL=Debug' -d cgillum/durabletask-sidecar:latest start --backend Emulator
    - name: Integration Tests with Gradle
      uses: gradle/gradle-build-action@bc3340afc5e3cc44f2321809ac090d731c13c514
      with:
        arguments: integrationTest
    - name: Archive test report
      uses: actions/upload-artifact@v2
      with:
        name: Integration test report
        path: client/build/reports/tests/integrationTest
    - name: Upload JAR output
      uses: actions/upload-artifact@v2
      with:
        name: Package
        path: client/build/libs

  functions:

    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'temurin'
      - name: Publish to local
        uses: gradle/gradle-build-action@bc3340afc5e3cc44f2321809ac090d731c13c514
        with:
          arguments: publishToMavenLocal
      - name: Build azure functions sample
        uses: gradle/gradle-build-action@bc3340afc5e3cc44f2321809ac090d731c13c514
        with:
          arguments: azureFunctionsPackage
        continue-on-error: true
      - name: Download azure functions java library # TODO: Remove this step once gradle plugin is updated
        run: |
          wget -P samples-azure-functions/build/azure-functions/azure-functions-sample/lib/ "https://repo.maven.apache.org/maven2/com/microsoft/azure/functions/azure-functions-java-library/2.0.1/azure-functions-java-library-2.0.1.jar" --show-progress
      - name: Run azure functions test
        run: samples-azure-functions/e2e-test.ps1 -DockerfilePath samples-azure-functions/Dockerfile -HttpStartPath api/StartOrchestration
        shell: pwsh